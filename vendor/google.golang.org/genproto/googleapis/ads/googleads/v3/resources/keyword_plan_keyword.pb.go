// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/ads/googleads/v3/resources/keyword_plan_keyword.proto

package resources

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	enums "google.golang.org/genproto/googleapis/ads/googleads/v3/enums"
	_ "google.golang.org/genproto/googleapis/api/annotations"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A Keyword Plan ad group keyword.
// Max number of keyword plan keywords per plan: 2500.
type KeywordPlanKeyword struct {
	// Immutable. The resource name of the Keyword Plan ad group keyword.
	// KeywordPlanKeyword resource names have the form:
	//
	// `customers/{customer_id}/keywordPlanKeywords/{kp_ad_group_keyword_id}`
	ResourceName string `protobuf:"bytes,1,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	// The Keyword Plan ad group to which this keyword belongs.
	KeywordPlanAdGroup *wrappers.StringValue `protobuf:"bytes,2,opt,name=keyword_plan_ad_group,json=keywordPlanAdGroup,proto3" json:"keyword_plan_ad_group,omitempty"`
	// Output only. The ID of the Keyword Plan keyword.
	Id *wrappers.Int64Value `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	// The keyword text.
	Text *wrappers.StringValue `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	// The keyword match type.
	MatchType enums.KeywordMatchTypeEnum_KeywordMatchType `protobuf:"varint,5,opt,name=match_type,json=matchType,proto3,enum=google.ads.googleads.v3.enums.KeywordMatchTypeEnum_KeywordMatchType" json:"match_type,omitempty"`
	// A keyword level max cpc bid in micros, in the account currency, that
	// overrides the keyword plan ad group cpc bid.
	CpcBidMicros         *wrappers.Int64Value `protobuf:"bytes,6,opt,name=cpc_bid_micros,json=cpcBidMicros,proto3" json:"cpc_bid_micros,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *KeywordPlanKeyword) Reset()         { *m = KeywordPlanKeyword{} }
func (m *KeywordPlanKeyword) String() string { return proto.CompactTextString(m) }
func (*KeywordPlanKeyword) ProtoMessage()    {}
func (*KeywordPlanKeyword) Descriptor() ([]byte, []int) {
	return fileDescriptor_148007907f81fae0, []int{0}
}

func (m *KeywordPlanKeyword) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeywordPlanKeyword.Unmarshal(m, b)
}
func (m *KeywordPlanKeyword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeywordPlanKeyword.Marshal(b, m, deterministic)
}
func (m *KeywordPlanKeyword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeywordPlanKeyword.Merge(m, src)
}
func (m *KeywordPlanKeyword) XXX_Size() int {
	return xxx_messageInfo_KeywordPlanKeyword.Size(m)
}
func (m *KeywordPlanKeyword) XXX_DiscardUnknown() {
	xxx_messageInfo_KeywordPlanKeyword.DiscardUnknown(m)
}

var xxx_messageInfo_KeywordPlanKeyword proto.InternalMessageInfo

func (m *KeywordPlanKeyword) GetResourceName() string {
	if m != nil {
		return m.ResourceName
	}
	return ""
}

func (m *KeywordPlanKeyword) GetKeywordPlanAdGroup() *wrappers.StringValue {
	if m != nil {
		return m.KeywordPlanAdGroup
	}
	return nil
}

func (m *KeywordPlanKeyword) GetId() *wrappers.Int64Value {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *KeywordPlanKeyword) GetText() *wrappers.StringValue {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *KeywordPlanKeyword) GetMatchType() enums.KeywordMatchTypeEnum_KeywordMatchType {
	if m != nil {
		return m.MatchType
	}
	return enums.KeywordMatchTypeEnum_UNSPECIFIED
}

func (m *KeywordPlanKeyword) GetCpcBidMicros() *wrappers.Int64Value {
	if m != nil {
		return m.CpcBidMicros
	}
	return nil
}

func init() {
	proto.RegisterType((*KeywordPlanKeyword)(nil), "google.ads.googleads.v3.resources.KeywordPlanKeyword")
}

func init() {
	proto.RegisterFile("google/ads/googleads/v3/resources/keyword_plan_keyword.proto", fileDescriptor_148007907f81fae0)
}

var fileDescriptor_148007907f81fae0 = []byte{
	// 539 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0x4f, 0x6b, 0xd4, 0x40,
	0x14, 0x27, 0xd9, 0xb6, 0xd0, 0x58, 0x7b, 0x08, 0x88, 0xb1, 0x16, 0x6d, 0x85, 0x42, 0x41, 0x9c,
	0x59, 0x1a, 0xe9, 0x21, 0x0a, 0x92, 0x45, 0x59, 0x54, 0x2a, 0x4b, 0x94, 0x45, 0x64, 0x21, 0xcc,
	0xce, 0x4c, 0xd3, 0x61, 0x93, 0x99, 0x71, 0x26, 0xd9, 0xba, 0x94, 0x1e, 0x04, 0x3f, 0x89, 0x47,
	0x3f, 0x8a, 0x9f, 0xa2, 0xe7, 0xde, 0xbc, 0x7a, 0x92, 0x4d, 0x26, 0xd9, 0x4a, 0xac, 0xab, 0xb7,
	0x5f, 0xe6, 0xfd, 0xfe, 0xbc, 0x97, 0x99, 0xe7, 0x3c, 0x4d, 0x84, 0x48, 0x52, 0x0a, 0x11, 0xd1,
	0xb0, 0x82, 0x73, 0x34, 0xf5, 0xa1, 0xa2, 0x5a, 0x14, 0x0a, 0x53, 0x0d, 0x27, 0x74, 0x76, 0x2a,
	0x14, 0x89, 0x65, 0x8a, 0x78, 0x6c, 0x3e, 0x80, 0x54, 0x22, 0x17, 0xee, 0x6e, 0x25, 0x01, 0x88,
	0x68, 0xd0, 0xa8, 0xc1, 0xd4, 0x07, 0x8d, 0x7a, 0xeb, 0xf0, 0xba, 0x00, 0xca, 0x8b, 0x6c, 0x61,
	0x9e, 0xa1, 0x1c, 0x9f, 0xc4, 0xf9, 0x4c, 0xd2, 0xca, 0x7a, 0xeb, 0x7e, 0xad, 0x93, 0x0c, 0x1e,
	0x33, 0x9a, 0x92, 0x78, 0x4c, 0x4f, 0xd0, 0x94, 0x09, 0x65, 0x08, 0x77, 0xae, 0x10, 0xea, 0x38,
	0x53, 0xba, 0x67, 0x4a, 0xe5, 0xd7, 0xb8, 0x38, 0x86, 0xa7, 0x0a, 0x49, 0x49, 0x95, 0x36, 0xf5,
	0xed, 0x2b, 0x52, 0xc4, 0xb9, 0xc8, 0x51, 0xce, 0x04, 0x37, 0xd5, 0x07, 0x3f, 0x56, 0x1c, 0xf7,
	0x75, 0xd5, 0xd6, 0x20, 0x45, 0xdc, 0x40, 0xf7, 0xbd, 0x73, 0xb3, 0x8e, 0x89, 0x39, 0xca, 0xa8,
	0x67, 0xed, 0x58, 0xfb, 0xeb, 0x3d, 0xff, 0x22, 0x5c, 0xfd, 0x19, 0x3e, 0x72, 0x1e, 0x2e, 0xe6,
	0x37, 0x48, 0x32, 0x0d, 0xb0, 0xc8, 0x60, 0xdb, 0x2b, 0xda, 0xa8, 0x9d, 0xde, 0xa0, 0x8c, 0xba,
	0x9f, 0x2d, 0xe7, 0xd6, 0x6f, 0x3f, 0x19, 0x91, 0x38, 0x51, 0xa2, 0x90, 0x9e, 0xbd, 0x63, 0xed,
	0xdf, 0x38, 0xd8, 0x36, 0x8e, 0xa0, 0x9e, 0x07, 0xbc, 0xcd, 0x15, 0xe3, 0xc9, 0x10, 0xa5, 0x05,
	0xed, 0x75, 0xff, 0x39, 0x3d, 0x24, 0xfd, 0xb9, 0x6b, 0xe4, 0x4e, 0x5a, 0x67, 0x6e, 0xd7, 0xb1,
	0x19, 0xf1, 0x3a, 0x65, 0xde, 0xdd, 0x56, 0xde, 0x4b, 0x9e, 0x1f, 0x3e, 0xae, 0xe2, 0x3a, 0x17,
	0x61, 0x27, 0xb2, 0x19, 0x71, 0xbb, 0xce, 0x4a, 0x4e, 0x3f, 0xe5, 0xde, 0xca, 0xf2, 0x1e, 0xa3,
	0x92, 0xe9, 0x62, 0xc7, 0x59, 0x5c, 0xb3, 0xb7, 0xba, 0x63, 0xed, 0x6f, 0x1e, 0x3c, 0x07, 0xd7,
	0x3d, 0xa1, 0xf2, 0x7d, 0x00, 0xd3, 0xfe, 0xd1, 0x5c, 0xf7, 0x6e, 0x26, 0xe9, 0x0b, 0x5e, 0x64,
	0xad, 0xc3, 0x68, 0x3d, 0xab, 0xa1, 0x1b, 0x3a, 0x9b, 0x58, 0xe2, 0x78, 0xcc, 0x48, 0x9c, 0x31,
	0xac, 0x84, 0xf6, 0xd6, 0x96, 0x0e, 0x15, 0x6d, 0x60, 0x89, 0x7b, 0x8c, 0x1c, 0x95, 0x82, 0xe0,
	0xe3, 0x65, 0xc8, 0xff, 0xeb, 0x3e, 0xdd, 0x67, 0xb8, 0xd0, 0xb9, 0xc8, 0xa8, 0xd2, 0xf0, 0xac,
	0x86, 0xe7, 0x70, 0xd2, 0x22, 0x6a, 0x78, 0xf6, 0xa7, 0x6d, 0x3a, 0xef, 0x7d, 0xb1, 0x9d, 0x3d,
	0x2c, 0x32, 0xb0, 0x74, 0x9f, 0x7a, 0xb7, 0xdb, 0xf1, 0x83, 0xf9, 0x44, 0x03, 0xeb, 0xc3, 0x2b,
	0xa3, 0x4e, 0x44, 0x8a, 0x78, 0x02, 0x84, 0x4a, 0x60, 0x42, 0x79, 0x39, 0x2f, 0x5c, 0xcc, 0xf0,
	0x97, 0x55, 0x7f, 0xd2, 0xa0, 0xaf, 0x76, 0xa7, 0x1f, 0x86, 0xdf, 0xec, 0xdd, 0x7e, 0x65, 0x19,
	0x12, 0x0d, 0x2a, 0x38, 0x47, 0x43, 0x1f, 0x44, 0x35, 0xf3, 0x7b, 0xcd, 0x19, 0x85, 0x44, 0x8f,
	0x1a, 0xce, 0x68, 0xe8, 0x8f, 0x1a, 0xce, 0xa5, 0xbd, 0x57, 0x15, 0x82, 0x20, 0x24, 0x3a, 0x08,
	0x1a, 0x56, 0x10, 0x0c, 0xfd, 0x20, 0x68, 0x78, 0xe3, 0xb5, 0xb2, 0x59, 0xff, 0x57, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xa0, 0x47, 0xa3, 0x1c, 0x96, 0x04, 0x00, 0x00,
}
