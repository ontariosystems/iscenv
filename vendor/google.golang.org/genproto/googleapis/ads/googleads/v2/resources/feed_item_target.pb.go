// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/ads/googleads/v2/resources/feed_item_target.proto

package resources

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	common "google.golang.org/genproto/googleapis/ads/googleads/v2/common"
	enums "google.golang.org/genproto/googleapis/ads/googleads/v2/enums"
	_ "google.golang.org/genproto/googleapis/api/annotations"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A feed item target.
type FeedItemTarget struct {
	// Immutable. The resource name of the feed item target.
	// Feed item target resource names have the form:
	// `customers/{customer_id}/feedItemTargets/{feed_id}~{feed_item_id}~{feed_item_target_type}~{feed_item_target_id}`
	ResourceName string `protobuf:"bytes,1,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	// Immutable. The feed item to which this feed item target belongs.
	FeedItem *wrappers.StringValue `protobuf:"bytes,2,opt,name=feed_item,json=feedItem,proto3" json:"feed_item,omitempty"`
	// Output only. The target type of this feed item target. This field is read-only.
	FeedItemTargetType enums.FeedItemTargetTypeEnum_FeedItemTargetType `protobuf:"varint,3,opt,name=feed_item_target_type,json=feedItemTargetType,proto3,enum=google.ads.googleads.v2.enums.FeedItemTargetTypeEnum_FeedItemTargetType" json:"feed_item_target_type,omitempty"`
	// Output only. The ID of the targeted resource. This field is read-only.
	FeedItemTargetId *wrappers.Int64Value `protobuf:"bytes,6,opt,name=feed_item_target_id,json=feedItemTargetId,proto3" json:"feed_item_target_id,omitempty"`
	// The targeted resource.
	//
	// Types that are valid to be assigned to Target:
	//	*FeedItemTarget_Campaign
	//	*FeedItemTarget_AdGroup
	//	*FeedItemTarget_Keyword
	//	*FeedItemTarget_GeoTargetConstant
	//	*FeedItemTarget_Device
	//	*FeedItemTarget_AdSchedule
	Target               isFeedItemTarget_Target `protobuf_oneof:"target"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *FeedItemTarget) Reset()         { *m = FeedItemTarget{} }
func (m *FeedItemTarget) String() string { return proto.CompactTextString(m) }
func (*FeedItemTarget) ProtoMessage()    {}
func (*FeedItemTarget) Descriptor() ([]byte, []int) {
	return fileDescriptor_08619793bc0ce69c, []int{0}
}

func (m *FeedItemTarget) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeedItemTarget.Unmarshal(m, b)
}
func (m *FeedItemTarget) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeedItemTarget.Marshal(b, m, deterministic)
}
func (m *FeedItemTarget) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeedItemTarget.Merge(m, src)
}
func (m *FeedItemTarget) XXX_Size() int {
	return xxx_messageInfo_FeedItemTarget.Size(m)
}
func (m *FeedItemTarget) XXX_DiscardUnknown() {
	xxx_messageInfo_FeedItemTarget.DiscardUnknown(m)
}

var xxx_messageInfo_FeedItemTarget proto.InternalMessageInfo

func (m *FeedItemTarget) GetResourceName() string {
	if m != nil {
		return m.ResourceName
	}
	return ""
}

func (m *FeedItemTarget) GetFeedItem() *wrappers.StringValue {
	if m != nil {
		return m.FeedItem
	}
	return nil
}

func (m *FeedItemTarget) GetFeedItemTargetType() enums.FeedItemTargetTypeEnum_FeedItemTargetType {
	if m != nil {
		return m.FeedItemTargetType
	}
	return enums.FeedItemTargetTypeEnum_UNSPECIFIED
}

func (m *FeedItemTarget) GetFeedItemTargetId() *wrappers.Int64Value {
	if m != nil {
		return m.FeedItemTargetId
	}
	return nil
}

type isFeedItemTarget_Target interface {
	isFeedItemTarget_Target()
}

type FeedItemTarget_Campaign struct {
	Campaign *wrappers.StringValue `protobuf:"bytes,4,opt,name=campaign,proto3,oneof"`
}

type FeedItemTarget_AdGroup struct {
	AdGroup *wrappers.StringValue `protobuf:"bytes,5,opt,name=ad_group,json=adGroup,proto3,oneof"`
}

type FeedItemTarget_Keyword struct {
	Keyword *common.KeywordInfo `protobuf:"bytes,7,opt,name=keyword,proto3,oneof"`
}

type FeedItemTarget_GeoTargetConstant struct {
	GeoTargetConstant *wrappers.StringValue `protobuf:"bytes,8,opt,name=geo_target_constant,json=geoTargetConstant,proto3,oneof"`
}

type FeedItemTarget_Device struct {
	Device enums.FeedItemTargetDeviceEnum_FeedItemTargetDevice `protobuf:"varint,9,opt,name=device,proto3,enum=google.ads.googleads.v2.enums.FeedItemTargetDeviceEnum_FeedItemTargetDevice,oneof"`
}

type FeedItemTarget_AdSchedule struct {
	AdSchedule *common.AdScheduleInfo `protobuf:"bytes,10,opt,name=ad_schedule,json=adSchedule,proto3,oneof"`
}

func (*FeedItemTarget_Campaign) isFeedItemTarget_Target() {}

func (*FeedItemTarget_AdGroup) isFeedItemTarget_Target() {}

func (*FeedItemTarget_Keyword) isFeedItemTarget_Target() {}

func (*FeedItemTarget_GeoTargetConstant) isFeedItemTarget_Target() {}

func (*FeedItemTarget_Device) isFeedItemTarget_Target() {}

func (*FeedItemTarget_AdSchedule) isFeedItemTarget_Target() {}

func (m *FeedItemTarget) GetTarget() isFeedItemTarget_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *FeedItemTarget) GetCampaign() *wrappers.StringValue {
	if x, ok := m.GetTarget().(*FeedItemTarget_Campaign); ok {
		return x.Campaign
	}
	return nil
}

func (m *FeedItemTarget) GetAdGroup() *wrappers.StringValue {
	if x, ok := m.GetTarget().(*FeedItemTarget_AdGroup); ok {
		return x.AdGroup
	}
	return nil
}

func (m *FeedItemTarget) GetKeyword() *common.KeywordInfo {
	if x, ok := m.GetTarget().(*FeedItemTarget_Keyword); ok {
		return x.Keyword
	}
	return nil
}

func (m *FeedItemTarget) GetGeoTargetConstant() *wrappers.StringValue {
	if x, ok := m.GetTarget().(*FeedItemTarget_GeoTargetConstant); ok {
		return x.GeoTargetConstant
	}
	return nil
}

func (m *FeedItemTarget) GetDevice() enums.FeedItemTargetDeviceEnum_FeedItemTargetDevice {
	if x, ok := m.GetTarget().(*FeedItemTarget_Device); ok {
		return x.Device
	}
	return enums.FeedItemTargetDeviceEnum_UNSPECIFIED
}

func (m *FeedItemTarget) GetAdSchedule() *common.AdScheduleInfo {
	if x, ok := m.GetTarget().(*FeedItemTarget_AdSchedule); ok {
		return x.AdSchedule
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FeedItemTarget) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FeedItemTarget_Campaign)(nil),
		(*FeedItemTarget_AdGroup)(nil),
		(*FeedItemTarget_Keyword)(nil),
		(*FeedItemTarget_GeoTargetConstant)(nil),
		(*FeedItemTarget_Device)(nil),
		(*FeedItemTarget_AdSchedule)(nil),
	}
}

func init() {
	proto.RegisterType((*FeedItemTarget)(nil), "google.ads.googleads.v2.resources.FeedItemTarget")
}

func init() {
	proto.RegisterFile("google/ads/googleads/v2/resources/feed_item_target.proto", fileDescriptor_08619793bc0ce69c)
}

var fileDescriptor_08619793bc0ce69c = []byte{
	// 708 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0x5b, 0x4f, 0x13, 0x4d,
	0x18, 0xa6, 0xed, 0x47, 0x29, 0xc3, 0x27, 0xd1, 0x25, 0x26, 0x2b, 0x12, 0x2d, 0x18, 0x62, 0xf1,
	0x30, 0x9b, 0xac, 0xc6, 0xc3, 0x72, 0xb5, 0x45, 0x6d, 0xab, 0x44, 0x49, 0x21, 0xbd, 0x30, 0x4d,
	0x9a, 0xe9, 0xce, 0xdb, 0x65, 0x43, 0x77, 0x66, 0xb3, 0x87, 0x12, 0x42, 0x48, 0x88, 0x3f, 0xc5,
	0x4b, 0x7f, 0x8a, 0xbf, 0x82, 0x6b, 0xee, 0xbd, 0xf1, 0xca, 0x74, 0x66, 0x76, 0xa1, 0x94, 0x0a,
	0x24, 0xde, 0x3d, 0x9d, 0xf7, 0x79, 0x9e, 0xf7, 0x30, 0xef, 0x6c, 0xd1, 0x1b, 0x97, 0x73, 0xb7,
	0x0f, 0x06, 0xa1, 0x91, 0x21, 0xe1, 0x10, 0x0d, 0x4c, 0x23, 0x84, 0x88, 0x27, 0xa1, 0x03, 0x91,
	0xd1, 0x03, 0xa0, 0x1d, 0x2f, 0x06, 0xbf, 0x13, 0x93, 0xd0, 0x85, 0x18, 0x07, 0x21, 0x8f, 0xb9,
	0xb6, 0x2c, 0xe9, 0x98, 0xd0, 0x08, 0x67, 0x4a, 0x3c, 0x30, 0x71, 0xa6, 0x5c, 0x7c, 0x3e, 0xc9,
	0xdc, 0xe1, 0xbe, 0xcf, 0x99, 0xe1, 0x84, 0x5e, 0x0c, 0xa1, 0x47, 0xa4, 0xe3, 0xe2, 0xfa, 0x24,
	0x3a, 0xb0, 0xc4, 0x1f, 0xaf, 0xa3, 0x43, 0x61, 0xe0, 0x39, 0xa0, 0xc4, 0x6f, 0x6f, 0x28, 0x8e,
	0x0f, 0x82, 0x54, 0xfa, 0x30, 0x95, 0x06, 0x9e, 0xd1, 0xf3, 0xa0, 0x4f, 0x3b, 0x5d, 0xd8, 0x25,
	0x03, 0x8f, 0x87, 0x8a, 0x70, 0xef, 0x1c, 0x21, 0xed, 0x4e, 0x85, 0x1e, 0xa8, 0x90, 0xf8, 0xd5,
	0x4d, 0x7a, 0xc6, 0x7e, 0x48, 0x82, 0x00, 0xc2, 0x48, 0xc5, 0x97, 0xce, 0x49, 0x09, 0x63, 0x3c,
	0x26, 0xb1, 0xc7, 0x99, 0x8a, 0xae, 0xfc, 0x2a, 0xa1, 0xf9, 0x0f, 0x00, 0xb4, 0x11, 0x83, 0xbf,
	0x23, 0xea, 0xd2, 0x76, 0xd0, 0xad, 0x34, 0x45, 0x87, 0x11, 0x1f, 0xf4, 0x5c, 0x39, 0x57, 0x99,
	0xad, 0x1a, 0x27, 0xf6, 0xf4, 0x6f, 0x7b, 0x0d, 0x3d, 0x3e, 0x1b, 0xb5, 0x42, 0x81, 0x17, 0x61,
	0x87, 0xfb, 0xc6, 0xa8, 0x4f, 0xf3, 0xff, 0xd4, 0xe5, 0x33, 0xf1, 0x41, 0xa3, 0x68, 0x36, 0x9b,
	0x80, 0x9e, 0x2f, 0xe7, 0x2a, 0x73, 0xe6, 0x92, 0x32, 0xc0, 0x69, 0xe9, 0x78, 0x3b, 0x0e, 0x3d,
	0xe6, 0xb6, 0x48, 0x3f, 0x81, 0xea, 0x9a, 0xc8, 0xf7, 0x08, 0x2d, 0x5f, 0x99, 0xaf, 0x59, 0xea,
	0x29, 0xa4, 0x1d, 0xe7, 0xd0, 0xdd, 0x4b, 0x07, 0xad, 0x17, 0xca, 0xb9, 0xca, 0xbc, 0x59, 0xc7,
	0x93, 0x76, 0x46, 0x5c, 0x12, 0x1e, 0x6d, 0x61, 0xe7, 0x20, 0x80, 0xf7, 0x2c, 0xf1, 0x2f, 0x39,
	0xae, 0x16, 0x4e, 0xec, 0x42, 0x53, 0xeb, 0x8d, 0x05, 0xb4, 0x2f, 0x68, 0x61, 0xac, 0x02, 0x8f,
	0xea, 0x45, 0xd1, 0xf2, 0xfd, 0xb1, 0x96, 0x1b, 0x2c, 0x7e, 0xf5, 0x52, 0x76, 0x2c, 0x2c, 0x6f,
	0x8f, 0x5a, 0x36, 0xa8, 0x06, 0xa8, 0xe4, 0x10, 0x3f, 0x20, 0x9e, 0xcb, 0xf4, 0xff, 0xfe, 0xc9,
	0xe0, 0x36, 0x94, 0x5d, 0x7d, 0xaa, 0x99, 0x59, 0x6b, 0x0e, 0x2a, 0x11, 0xda, 0x71, 0x43, 0x9e,
	0x04, 0xfa, 0xf4, 0x35, 0xd2, 0x54, 0x44, 0x9a, 0x15, 0x54, 0x9e, 0x98, 0xc6, 0xa6, 0xb5, 0xa1,
	0x5b, 0x7d, 0xaa, 0x39, 0x43, 0x24, 0xd4, 0x36, 0xd1, 0xcc, 0x1e, 0x1c, 0xec, 0xf3, 0x90, 0xea,
	0x33, 0x22, 0xc7, 0xd3, 0x89, 0x17, 0x22, 0x5f, 0x28, 0xfe, 0x24, 0xe9, 0x0d, 0xd6, 0xe3, 0xc3,
	0x01, 0x4d, 0x0f, 0xdd, 0x94, 0x85, 0xf6, 0x2d, 0x87, 0x16, 0x5c, 0xe0, 0xe9, 0x94, 0x1d, 0xce,
	0xa2, 0x98, 0xb0, 0x58, 0x2f, 0x5d, 0xa3, 0x7c, 0x53, 0x94, 0xff, 0x0c, 0x3d, 0x99, 0x58, 0x7e,
	0x0d, 0xb8, 0xbc, 0x83, 0x0d, 0xe5, 0x5b, 0x9f, 0x6a, 0xde, 0x71, 0x2f, 0x1e, 0x6a, 0x7b, 0xa8,
	0x28, 0x3f, 0x03, 0xfa, 0xac, 0x58, 0xb1, 0xcd, 0x1b, 0xad, 0xd8, 0x3b, 0x21, 0xbd, 0x64, 0xc9,
	0x64, 0x20, 0x6d, 0x59, 0xa5, 0xd0, 0x5a, 0x68, 0x8e, 0xd0, 0x4e, 0xe4, 0xec, 0x02, 0x4d, 0xfa,
	0xa0, 0x23, 0xd1, 0x28, 0xbe, 0x6a, 0x86, 0x36, 0xdd, 0x56, 0x8a, 0xf3, 0x63, 0x44, 0x24, 0x3b,
	0xb6, 0xe0, 0xd4, 0xee, 0x5e, 0xfb, 0x65, 0x6b, 0xaf, 0x9d, 0x24, 0x8a, 0xb9, 0x0f, 0x61, 0x64,
	0x1c, 0xa6, 0xf0, 0xc8, 0x18, 0x5d, 0xdc, 0xc8, 0x38, 0xbc, 0xf8, 0x0c, 0x8e, 0xaa, 0x25, 0x54,
	0x94, 0xb0, 0x7a, 0x9c, 0x47, 0xab, 0x0e, 0xf7, 0xf1, 0x95, 0x9f, 0xf0, 0xea, 0xc2, 0x68, 0xf2,
	0xad, 0xe1, 0x65, 0x6e, 0xe5, 0xbe, 0x7e, 0x54, 0x4a, 0x97, 0xf7, 0x09, 0x73, 0x31, 0x0f, 0x5d,
	0xc3, 0x05, 0x26, 0xae, 0xda, 0x38, 0xab, 0xfe, 0x2f, 0xff, 0x2a, 0xeb, 0x19, 0xfa, 0x9e, 0x2f,
	0xd4, 0x6c, 0xfb, 0x47, 0x7e, 0xb9, 0x26, 0x2d, 0x6d, 0x1a, 0x61, 0x09, 0x87, 0xa8, 0x65, 0xe2,
	0x66, 0xca, 0xfc, 0x99, 0x72, 0xda, 0x36, 0x8d, 0xda, 0x19, 0xa7, 0xdd, 0x32, 0xdb, 0x19, 0xe7,
	0x34, 0xbf, 0x2a, 0x03, 0x96, 0x65, 0xd3, 0xc8, 0xb2, 0x32, 0x96, 0x65, 0xb5, 0x4c, 0xcb, 0xca,
	0x78, 0xdd, 0xa2, 0x28, 0xf6, 0xc5, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc3, 0x20, 0xe3, 0xe4,
	0x01, 0x07, 0x00, 0x00,
}
