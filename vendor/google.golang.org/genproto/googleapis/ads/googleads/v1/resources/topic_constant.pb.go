// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/ads/googleads/v1/resources/topic_constant.proto

package resources

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	_ "google.golang.org/genproto/googleapis/api/annotations"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Use topics to target or exclude placements in the Google Display Network
// based on the category into which the placement falls (for example,
// "Pets & Animals/Pets/Dogs").
type TopicConstant struct {
	// Output only. The resource name of the topic constant.
	// topic constant resource names have the form:
	//
	// `topicConstants/{topic_id}`
	ResourceName string `protobuf:"bytes,1,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	// Output only. The ID of the topic.
	Id *wrappers.Int64Value `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Output only. Resource name of parent of the topic constant.
	TopicConstantParent *wrappers.StringValue `protobuf:"bytes,3,opt,name=topic_constant_parent,json=topicConstantParent,proto3" json:"topic_constant_parent,omitempty"`
	// Output only. The category to target or exclude. Each subsequent element in the array
	// describes a more specific sub-category. For example,
	// {"Pets & Animals", "Pets", "Dogs"} represents the
	// "Pets & Animals/Pets/Dogs" category. List of available topic categories at
	// https://developers.google.com/adwords/api/docs/appendix/verticals
	Path                 []*wrappers.StringValue `protobuf:"bytes,4,rep,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *TopicConstant) Reset()         { *m = TopicConstant{} }
func (m *TopicConstant) String() string { return proto.CompactTextString(m) }
func (*TopicConstant) ProtoMessage()    {}
func (*TopicConstant) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e0961a18b03751e, []int{0}
}

func (m *TopicConstant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TopicConstant.Unmarshal(m, b)
}
func (m *TopicConstant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TopicConstant.Marshal(b, m, deterministic)
}
func (m *TopicConstant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicConstant.Merge(m, src)
}
func (m *TopicConstant) XXX_Size() int {
	return xxx_messageInfo_TopicConstant.Size(m)
}
func (m *TopicConstant) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicConstant.DiscardUnknown(m)
}

var xxx_messageInfo_TopicConstant proto.InternalMessageInfo

func (m *TopicConstant) GetResourceName() string {
	if m != nil {
		return m.ResourceName
	}
	return ""
}

func (m *TopicConstant) GetId() *wrappers.Int64Value {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TopicConstant) GetTopicConstantParent() *wrappers.StringValue {
	if m != nil {
		return m.TopicConstantParent
	}
	return nil
}

func (m *TopicConstant) GetPath() []*wrappers.StringValue {
	if m != nil {
		return m.Path
	}
	return nil
}

func init() {
	proto.RegisterType((*TopicConstant)(nil), "google.ads.googleads.v1.resources.TopicConstant")
}

func init() {
	proto.RegisterFile("google/ads/googleads/v1/resources/topic_constant.proto", fileDescriptor_7e0961a18b03751e)
}

var fileDescriptor_7e0961a18b03751e = []byte{
	// 434 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0xcd, 0x6a, 0xd4, 0x40,
	0x1c, 0x27, 0x49, 0x11, 0x1c, 0xed, 0x25, 0x22, 0xac, 0xb5, 0xd8, 0xad, 0x50, 0xd9, 0xd3, 0x8c,
	0xf1, 0xa3, 0x87, 0xf1, 0x34, 0xeb, 0xa1, 0x54, 0x44, 0x96, 0xad, 0xe4, 0x20, 0x81, 0x30, 0x9b,
	0x99, 0xa6, 0x03, 0xc9, 0xcc, 0x30, 0x33, 0xbb, 0x1e, 0x44, 0xf0, 0x49, 0x3c, 0x78, 0xf4, 0x51,
	0x7c, 0x8a, 0x9e, 0xfb, 0x08, 0x5e, 0x94, 0x24, 0x93, 0x74, 0x83, 0x60, 0xf5, 0xf6, 0x0b, 0xbf,
	0xcf, 0x7f, 0x18, 0x70, 0x5c, 0x2a, 0x55, 0x56, 0x1c, 0x51, 0x66, 0x51, 0x07, 0x1b, 0xb4, 0x49,
	0x90, 0xe1, 0x56, 0xad, 0x4d, 0xc1, 0x2d, 0x72, 0x4a, 0x8b, 0x22, 0x2f, 0x94, 0xb4, 0x8e, 0x4a,
	0x07, 0xb5, 0x51, 0x4e, 0xc5, 0x87, 0x9d, 0x18, 0x52, 0x66, 0xe1, 0xe0, 0x83, 0x9b, 0x04, 0x0e,
	0xbe, 0xbd, 0x83, 0x3e, 0x5a, 0x0b, 0x74, 0x2e, 0x78, 0xc5, 0xf2, 0x15, 0xbf, 0xa0, 0x1b, 0xa1,
	0x4c, 0x97, 0xb1, 0xf7, 0x60, 0x4b, 0xd0, 0xdb, 0x3c, 0xf5, 0xc8, 0x53, 0xed, 0xd7, 0x6a, 0x7d,
	0x8e, 0x3e, 0x1a, 0xaa, 0x35, 0x37, 0xd6, 0xf3, 0xfb, 0x5b, 0x56, 0x2a, 0xa5, 0x72, 0xd4, 0x09,
	0x25, 0x3d, 0xfb, 0xf8, 0x6b, 0x04, 0x76, 0xdf, 0x37, 0xab, 0x5f, 0xfb, 0xd1, 0xf1, 0x19, 0xd8,
	0xed, 0x1b, 0x72, 0x49, 0x6b, 0x3e, 0x09, 0xa6, 0xc1, 0xec, 0xf6, 0x1c, 0x5e, 0x92, 0xe8, 0x27,
	0x99, 0x81, 0x27, 0xd7, 0x27, 0x78, 0xa4, 0x85, 0x85, 0x85, 0xaa, 0xd1, 0x28, 0x66, 0x79, 0xb7,
	0x0f, 0x79, 0x47, 0x6b, 0x1e, 0x3f, 0x05, 0xa1, 0x60, 0x93, 0x70, 0x1a, 0xcc, 0xee, 0x3c, 0x7b,
	0xe8, 0x8d, 0xb0, 0x5f, 0x0c, 0x4f, 0xa5, 0x3b, 0x7e, 0x91, 0xd2, 0x6a, 0xcd, 0xe7, 0xd1, 0x25,
	0x89, 0x96, 0xa1, 0x60, 0xf1, 0x97, 0x00, 0xdc, 0x1f, 0xff, 0xce, 0x5c, 0x53, 0xc3, 0xa5, 0x9b,
	0x44, 0x6d, 0xca, 0xfe, 0x1f, 0x29, 0x67, 0xce, 0x08, 0x59, 0x76, 0x31, 0xff, 0xbb, 0xf6, 0x9e,
	0xdb, 0xfe, 0x5c, 0xb4, 0x45, 0xf1, 0x4b, 0xb0, 0xa3, 0xa9, 0xbb, 0x98, 0xec, 0x4c, 0xa3, 0x1b,
	0x0b, 0xdb, 0xdd, 0xad, 0x1c, 0xbf, 0xbd, 0x22, 0xa7, 0xff, 0x5a, 0x1c, 0x1f, 0x8c, 0x8a, 0x2d,
	0xfa, 0x34, 0xbe, 0xf9, 0xf3, 0xfc, 0x57, 0x00, 0x8e, 0x0a, 0x55, 0xc3, 0x1b, 0x1f, 0xd1, 0x3c,
	0x1e, 0x25, 0x2f, 0x9a, 0x95, 0x8b, 0xe0, 0xc3, 0x1b, 0x6f, 0x2c, 0x55, 0x45, 0x65, 0x09, 0x95,
	0x29, 0x51, 0xc9, 0x65, 0x7b, 0x03, 0xba, 0x5e, 0xf6, 0x97, 0x47, 0xfd, 0x6a, 0x40, 0xdf, 0xc2,
	0xe8, 0x84, 0x90, 0xef, 0xe1, 0xe1, 0x49, 0x17, 0x49, 0x98, 0x85, 0x1d, 0x6c, 0x50, 0x9a, 0xc0,
	0x65, 0xaf, 0xfc, 0xd1, 0x6b, 0x32, 0xc2, 0x6c, 0x36, 0x68, 0xb2, 0x34, 0xc9, 0x06, 0xcd, 0x55,
	0x78, 0xd4, 0x11, 0x18, 0x13, 0x66, 0x31, 0x1e, 0x54, 0x18, 0xa7, 0x09, 0xc6, 0x83, 0x6e, 0x75,
	0xab, 0x1d, 0xfb, 0xfc, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0e, 0xd3, 0x11, 0x4f, 0x80, 0x03,
	0x00, 0x00,
}
