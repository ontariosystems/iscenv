// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/cloud/gaming/v1beta/game_server_configs_service.proto

package gaming

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	longrunning "google.golang.org/genproto/googleapis/longrunning"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() {
	proto.RegisterFile("google/cloud/gaming/v1beta/game_server_configs_service.proto", fileDescriptor_81fa3415b33cff76)
}

var fileDescriptor_81fa3415b33cff76 = []byte{
	// 496 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0xcd, 0x6a, 0x14, 0x41,
	0x10, 0xc7, 0x99, 0x20, 0x41, 0xe6, 0xa4, 0x2d, 0x46, 0x1d, 0x3f, 0x0e, 0x2b, 0x5e, 0x96, 0xd8,
	0x8d, 0x1f, 0x88, 0x46, 0x05, 0xc7, 0x04, 0x16, 0x41, 0x89, 0x18, 0x10, 0x11, 0x24, 0x74, 0x66,
	0x2b, 0x9d, 0x91, 0x9e, 0xae, 0xb6, 0xbb, 0x36, 0x8b, 0x48, 0x3c, 0xf8, 0x0a, 0x5e, 0xbd, 0xfb,
	0x16, 0x3e, 0x40, 0x8e, 0xe6, 0xb6, 0x67, 0xf1, 0x01, 0x7c, 0x02, 0x99, 0xe9, 0x19, 0x5d, 0x32,
	0xe3, 0x92, 0x95, 0x1c, 0xbb, 0xab, 0x7e, 0x55, 0xfd, 0xff, 0x77, 0x51, 0xf1, 0x03, 0x85, 0xa8,
	0x34, 0x88, 0x4c, 0xe3, 0x68, 0x28, 0x94, 0x2c, 0x72, 0xa3, 0xc4, 0xee, 0x8d, 0x2d, 0x20, 0x59,
	0x9e, 0x60, 0xd3, 0x83, 0xdb, 0x05, 0xb7, 0x99, 0xa1, 0xd9, 0xce, 0x95, 0xaf, 0x8e, 0x79, 0x06,
	0xdc, 0x3a, 0x24, 0x64, 0x49, 0xa0, 0x79, 0x45, 0xf3, 0x40, 0xf3, 0x40, 0x27, 0x97, 0xea, 0xca,
	0xd2, 0xe6, 0x42, 0x1a, 0x83, 0x24, 0x29, 0x47, 0xe3, 0x03, 0x99, 0x9c, 0x9b, 0x8a, 0x66, 0x3a,
	0x07, 0x43, 0x75, 0xe0, 0xf6, 0x7c, 0x0f, 0xaa, 0xa9, 0xab, 0x35, 0xa5, 0xd1, 0x28, 0x37, 0x32,
	0xa6, 0x84, 0xd0, 0x82, 0x9b, 0xee, 0x79, 0xf3, 0xdb, 0xc9, 0xf8, 0xfc, 0x40, 0x16, 0xb0, 0x51,
	0x55, 0x58, 0x0d, 0x05, 0x36, 0x82, 0x20, 0xf6, 0x33, 0x8a, 0xcf, 0x3e, 0xcd, 0x3d, 0xb5, 0x12,
	0xd8, 0x5d, 0xfe, 0x6f, 0x95, 0xbc, 0x13, 0x79, 0x01, 0xef, 0x46, 0xe0, 0x29, 0xb9, 0xf7, 0x1f,
	0xa4, 0xb7, 0x68, 0x3c, 0xf4, 0x5e, 0x4d, 0xd2, 0x45, 0x2b, 0x1d, 0x18, 0xfa, 0x74, 0xf0, 0xe3,
	0xf3, 0xc2, 0x13, 0x36, 0x68, 0x4c, 0xf8, 0x10, 0xae, 0x1f, 0x5a, 0x87, 0x6f, 0x21, 0x23, 0x2f,
	0xfa, 0x42, 0x63, 0x16, 0x84, 0x8a, 0x7e, 0xe5, 0x51, 0x28, 0xb9, 0x06, 0x56, 0xe3, 0xfb, 0x02,
	0x4c, 0x99, 0xb3, 0x27, 0x6a, 0xc3, 0xd8, 0x41, 0x14, 0x9f, 0x19, 0x40, 0xab, 0x35, 0xbb, 0x33,
	0xeb, 0xb1, 0x1d, 0x40, 0x23, 0x72, 0x79, 0x26, 0x77, 0x08, 0xea, 0xbd, 0x9c, 0xa4, 0x27, 0x8c,
	0x2c, 0xa0, 0xa5, 0xaa, 0xbc, 0x9c, 0x53, 0x53, 0x23, 0x49, 0xf4, 0xf7, 0xd8, 0x97, 0x85, 0x78,
	0x69, 0xd5, 0x81, 0x24, 0x68, 0x09, 0x9b, 0xf9, 0x0b, 0xdd, 0x4c, 0xa3, 0xed, 0x72, 0x83, 0x4e,
	0xcd, 0x15, 0x5f, 0x6f, 0xe6, 0xaa, 0xf7, 0x35, 0xda, 0x4f, 0xaf, 0xc5, 0xa7, 0x5a, 0x1d, 0x4f,
	0xff, 0x49, 0x79, 0x06, 0x24, 0x87, 0x92, 0xe4, 0x24, 0xbd, 0x10, 0xbe, 0x6d, 0xb9, 0x3d, 0xc3,
	0x95, 0x15, 0x6f, 0x7a, 0xc7, 0xf5, 0xc1, 0x2b, 0xac, 0xdd, 0x82, 0xfd, 0x8a, 0xe2, 0xa5, 0x35,
	0xd0, 0x30, 0xaf, 0x3d, 0xdd, 0xcc, 0x11, 0xed, 0xf9, 0x78, 0x74, 0x77, 0xa6, 0x66, 0xa2, 0x7f,
	0x5c, 0x33, 0x91, 0xac, 0xef, 0xa7, 0x17, 0xcb, 0xb4, 0x7a, 0x67, 0xf9, 0xfa, 0xb5, 0xd2, 0xe6,
	0x9e, 0x67, 0x58, 0x7c, 0x4f, 0xf9, 0x0e, 0x91, 0xf5, 0x2b, 0x42, 0x8c, 0xc7, 0xe3, 0x43, 0x41,
	0x21, 0x47, 0xb4, 0x13, 0x96, 0xd0, 0x75, 0xab, 0x25, 0x6d, 0xa3, 0x2b, 0x1e, 0x0f, 0xe3, 0x2b,
	0x19, 0x16, 0x33, 0xfc, 0x7a, 0x1e, 0xbd, 0x7e, 0x54, 0x47, 0x15, 0x6a, 0x69, 0x14, 0x47, 0xa7,
	0x84, 0x02, 0x53, 0x2d, 0x20, 0xf1, 0xb7, 0x45, 0xd7, 0x7a, 0xbb, 0x1f, 0x4e, 0x5b, 0x8b, 0x55,
	0xf2, 0xad, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x55, 0xbd, 0xaf, 0x8e, 0x9b, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GameServerConfigsServiceClient is the client API for GameServerConfigsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GameServerConfigsServiceClient interface {
	// Lists Game Server Configs in a given project, Location, and Game Server
	// Deployment.
	ListGameServerConfigs(ctx context.Context, in *ListGameServerConfigsRequest, opts ...grpc.CallOption) (*ListGameServerConfigsResponse, error)
	// Gets details of a single Game Server Config.
	GetGameServerConfig(ctx context.Context, in *GetGameServerConfigRequest, opts ...grpc.CallOption) (*GameServerConfig, error)
	// Creates a new Game Server Config in a given project, Location, and Game
	// Server Deployment. Game Server Configs are immutable, and are not applied
	// until referenced in the Game Server Deployment Rollout resource.
	CreateGameServerConfig(ctx context.Context, in *CreateGameServerConfigRequest, opts ...grpc.CallOption) (*longrunning.Operation, error)
	// Deletes a single Game Server Config. The deletion will fail if the Game
	// Server Config is referenced in a Game Server Deployment Rollout.
	DeleteGameServerConfig(ctx context.Context, in *DeleteGameServerConfigRequest, opts ...grpc.CallOption) (*longrunning.Operation, error)
}

type gameServerConfigsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGameServerConfigsServiceClient(cc grpc.ClientConnInterface) GameServerConfigsServiceClient {
	return &gameServerConfigsServiceClient{cc}
}

func (c *gameServerConfigsServiceClient) ListGameServerConfigs(ctx context.Context, in *ListGameServerConfigsRequest, opts ...grpc.CallOption) (*ListGameServerConfigsResponse, error) {
	out := new(ListGameServerConfigsResponse)
	err := c.cc.Invoke(ctx, "/google.cloud.gaming.v1beta.GameServerConfigsService/ListGameServerConfigs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameServerConfigsServiceClient) GetGameServerConfig(ctx context.Context, in *GetGameServerConfigRequest, opts ...grpc.CallOption) (*GameServerConfig, error) {
	out := new(GameServerConfig)
	err := c.cc.Invoke(ctx, "/google.cloud.gaming.v1beta.GameServerConfigsService/GetGameServerConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameServerConfigsServiceClient) CreateGameServerConfig(ctx context.Context, in *CreateGameServerConfigRequest, opts ...grpc.CallOption) (*longrunning.Operation, error) {
	out := new(longrunning.Operation)
	err := c.cc.Invoke(ctx, "/google.cloud.gaming.v1beta.GameServerConfigsService/CreateGameServerConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameServerConfigsServiceClient) DeleteGameServerConfig(ctx context.Context, in *DeleteGameServerConfigRequest, opts ...grpc.CallOption) (*longrunning.Operation, error) {
	out := new(longrunning.Operation)
	err := c.cc.Invoke(ctx, "/google.cloud.gaming.v1beta.GameServerConfigsService/DeleteGameServerConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GameServerConfigsServiceServer is the server API for GameServerConfigsService service.
type GameServerConfigsServiceServer interface {
	// Lists Game Server Configs in a given project, Location, and Game Server
	// Deployment.
	ListGameServerConfigs(context.Context, *ListGameServerConfigsRequest) (*ListGameServerConfigsResponse, error)
	// Gets details of a single Game Server Config.
	GetGameServerConfig(context.Context, *GetGameServerConfigRequest) (*GameServerConfig, error)
	// Creates a new Game Server Config in a given project, Location, and Game
	// Server Deployment. Game Server Configs are immutable, and are not applied
	// until referenced in the Game Server Deployment Rollout resource.
	CreateGameServerConfig(context.Context, *CreateGameServerConfigRequest) (*longrunning.Operation, error)
	// Deletes a single Game Server Config. The deletion will fail if the Game
	// Server Config is referenced in a Game Server Deployment Rollout.
	DeleteGameServerConfig(context.Context, *DeleteGameServerConfigRequest) (*longrunning.Operation, error)
}

// UnimplementedGameServerConfigsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGameServerConfigsServiceServer struct {
}

func (*UnimplementedGameServerConfigsServiceServer) ListGameServerConfigs(ctx context.Context, req *ListGameServerConfigsRequest) (*ListGameServerConfigsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListGameServerConfigs not implemented")
}
func (*UnimplementedGameServerConfigsServiceServer) GetGameServerConfig(ctx context.Context, req *GetGameServerConfigRequest) (*GameServerConfig, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGameServerConfig not implemented")
}
func (*UnimplementedGameServerConfigsServiceServer) CreateGameServerConfig(ctx context.Context, req *CreateGameServerConfigRequest) (*longrunning.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGameServerConfig not implemented")
}
func (*UnimplementedGameServerConfigsServiceServer) DeleteGameServerConfig(ctx context.Context, req *DeleteGameServerConfigRequest) (*longrunning.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteGameServerConfig not implemented")
}

func RegisterGameServerConfigsServiceServer(s *grpc.Server, srv GameServerConfigsServiceServer) {
	s.RegisterService(&_GameServerConfigsService_serviceDesc, srv)
}

func _GameServerConfigsService_ListGameServerConfigs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListGameServerConfigsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServerConfigsServiceServer).ListGameServerConfigs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.gaming.v1beta.GameServerConfigsService/ListGameServerConfigs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServerConfigsServiceServer).ListGameServerConfigs(ctx, req.(*ListGameServerConfigsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameServerConfigsService_GetGameServerConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGameServerConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServerConfigsServiceServer).GetGameServerConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.gaming.v1beta.GameServerConfigsService/GetGameServerConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServerConfigsServiceServer).GetGameServerConfig(ctx, req.(*GetGameServerConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameServerConfigsService_CreateGameServerConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateGameServerConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServerConfigsServiceServer).CreateGameServerConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.gaming.v1beta.GameServerConfigsService/CreateGameServerConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServerConfigsServiceServer).CreateGameServerConfig(ctx, req.(*CreateGameServerConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameServerConfigsService_DeleteGameServerConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteGameServerConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServerConfigsServiceServer).DeleteGameServerConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.gaming.v1beta.GameServerConfigsService/DeleteGameServerConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServerConfigsServiceServer).DeleteGameServerConfig(ctx, req.(*DeleteGameServerConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GameServerConfigsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "google.cloud.gaming.v1beta.GameServerConfigsService",
	HandlerType: (*GameServerConfigsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListGameServerConfigs",
			Handler:    _GameServerConfigsService_ListGameServerConfigs_Handler,
		},
		{
			MethodName: "GetGameServerConfig",
			Handler:    _GameServerConfigsService_GetGameServerConfig_Handler,
		},
		{
			MethodName: "CreateGameServerConfig",
			Handler:    _GameServerConfigsService_CreateGameServerConfig_Handler,
		},
		{
			MethodName: "DeleteGameServerConfig",
			Handler:    _GameServerConfigsService_DeleteGameServerConfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google/cloud/gaming/v1beta/game_server_configs_service.proto",
}
