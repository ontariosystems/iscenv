// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/cloud/datacatalog/v1/search.proto

package datacatalog

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The different types of resources that can be returned in search.
type SearchResultType int32

const (
	// Default unknown type.
	SearchResultType_SEARCH_RESULT_TYPE_UNSPECIFIED SearchResultType = 0
	// An [Entry][google.cloud.datacatalog.v1.Entry].
	SearchResultType_ENTRY SearchResultType = 1
	// A [TagTemplate][google.cloud.datacatalog.v1.TagTemplate].
	SearchResultType_TAG_TEMPLATE SearchResultType = 2
	// An [EntryGroup][google.cloud.datacatalog.v1.EntryGroup].
	SearchResultType_ENTRY_GROUP SearchResultType = 3
)

var SearchResultType_name = map[int32]string{
	0: "SEARCH_RESULT_TYPE_UNSPECIFIED",
	1: "ENTRY",
	2: "TAG_TEMPLATE",
	3: "ENTRY_GROUP",
}

var SearchResultType_value = map[string]int32{
	"SEARCH_RESULT_TYPE_UNSPECIFIED": 0,
	"ENTRY":                          1,
	"TAG_TEMPLATE":                   2,
	"ENTRY_GROUP":                    3,
}

func (x SearchResultType) String() string {
	return proto.EnumName(SearchResultType_name, int32(x))
}

func (SearchResultType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_92ea9a51da4a4f11, []int{0}
}

// A result that appears in the response of a search request. Each result
// captures details of one entry that matches the search.
type SearchCatalogResult struct {
	// Type of the search result. This field can be used to determine which Get
	// method to call to fetch the full resource.
	SearchResultType SearchResultType `protobuf:"varint,1,opt,name=search_result_type,json=searchResultType,proto3,enum=google.cloud.datacatalog.v1.SearchResultType" json:"search_result_type,omitempty"`
	// Sub-type of the search result. This is a dot-delimited description of the
	// resource's full type, and is the same as the value callers would provide in
	// the "type" search facet.  Examples: `entry.table`, `entry.dataStream`,
	// `tagTemplate`.
	SearchResultSubtype string `protobuf:"bytes,2,opt,name=search_result_subtype,json=searchResultSubtype,proto3" json:"search_result_subtype,omitempty"`
	// The relative resource name of the resource in URL format.
	// Examples:
	//
	//  * `projects/{project_id}/locations/{location_id}/entryGroups/{entry_group_id}/entries/{entry_id}`
	//  * `projects/{project_id}/tagTemplates/{tag_template_id}`
	RelativeResourceName string `protobuf:"bytes,3,opt,name=relative_resource_name,json=relativeResourceName,proto3" json:"relative_resource_name,omitempty"`
	// The full name of the cloud resource the entry belongs to. See:
	// https://cloud.google.com/apis/design/resource_names#full_resource_name.
	// Example:
	//
	//  * `//bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId`
	LinkedResource string `protobuf:"bytes,4,opt,name=linked_resource,json=linkedResource,proto3" json:"linked_resource,omitempty"`
	// The source system of the entry. Only applicable when `search_result_type`
	// is ENTRY.
	//
	// Types that are valid to be assigned to System:
	//	*SearchCatalogResult_IntegratedSystem
	//	*SearchCatalogResult_UserSpecifiedSystem
	System               isSearchCatalogResult_System `protobuf_oneof:"system"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *SearchCatalogResult) Reset()         { *m = SearchCatalogResult{} }
func (m *SearchCatalogResult) String() string { return proto.CompactTextString(m) }
func (*SearchCatalogResult) ProtoMessage()    {}
func (*SearchCatalogResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_92ea9a51da4a4f11, []int{0}
}

func (m *SearchCatalogResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchCatalogResult.Unmarshal(m, b)
}
func (m *SearchCatalogResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchCatalogResult.Marshal(b, m, deterministic)
}
func (m *SearchCatalogResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchCatalogResult.Merge(m, src)
}
func (m *SearchCatalogResult) XXX_Size() int {
	return xxx_messageInfo_SearchCatalogResult.Size(m)
}
func (m *SearchCatalogResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchCatalogResult.DiscardUnknown(m)
}

var xxx_messageInfo_SearchCatalogResult proto.InternalMessageInfo

func (m *SearchCatalogResult) GetSearchResultType() SearchResultType {
	if m != nil {
		return m.SearchResultType
	}
	return SearchResultType_SEARCH_RESULT_TYPE_UNSPECIFIED
}

func (m *SearchCatalogResult) GetSearchResultSubtype() string {
	if m != nil {
		return m.SearchResultSubtype
	}
	return ""
}

func (m *SearchCatalogResult) GetRelativeResourceName() string {
	if m != nil {
		return m.RelativeResourceName
	}
	return ""
}

func (m *SearchCatalogResult) GetLinkedResource() string {
	if m != nil {
		return m.LinkedResource
	}
	return ""
}

type isSearchCatalogResult_System interface {
	isSearchCatalogResult_System()
}

type SearchCatalogResult_IntegratedSystem struct {
	IntegratedSystem IntegratedSystem `protobuf:"varint,8,opt,name=integrated_system,json=integratedSystem,proto3,enum=google.cloud.datacatalog.v1.IntegratedSystem,oneof"`
}

type SearchCatalogResult_UserSpecifiedSystem struct {
	UserSpecifiedSystem string `protobuf:"bytes,9,opt,name=user_specified_system,json=userSpecifiedSystem,proto3,oneof"`
}

func (*SearchCatalogResult_IntegratedSystem) isSearchCatalogResult_System() {}

func (*SearchCatalogResult_UserSpecifiedSystem) isSearchCatalogResult_System() {}

func (m *SearchCatalogResult) GetSystem() isSearchCatalogResult_System {
	if m != nil {
		return m.System
	}
	return nil
}

func (m *SearchCatalogResult) GetIntegratedSystem() IntegratedSystem {
	if x, ok := m.GetSystem().(*SearchCatalogResult_IntegratedSystem); ok {
		return x.IntegratedSystem
	}
	return IntegratedSystem_INTEGRATED_SYSTEM_UNSPECIFIED
}

func (m *SearchCatalogResult) GetUserSpecifiedSystem() string {
	if x, ok := m.GetSystem().(*SearchCatalogResult_UserSpecifiedSystem); ok {
		return x.UserSpecifiedSystem
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SearchCatalogResult) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SearchCatalogResult_IntegratedSystem)(nil),
		(*SearchCatalogResult_UserSpecifiedSystem)(nil),
	}
}

func init() {
	proto.RegisterEnum("google.cloud.datacatalog.v1.SearchResultType", SearchResultType_name, SearchResultType_value)
	proto.RegisterType((*SearchCatalogResult)(nil), "google.cloud.datacatalog.v1.SearchCatalogResult")
}

func init() {
	proto.RegisterFile("google/cloud/datacatalog/v1/search.proto", fileDescriptor_92ea9a51da4a4f11)
}

var fileDescriptor_92ea9a51da4a4f11 = []byte{
	// 509 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xc1, 0x6a, 0xdb, 0x4c,
	0x14, 0x85, 0x2d, 0xfb, 0xff, 0x43, 0x3c, 0x2d, 0x89, 0x3a, 0x6e, 0x8a, 0x49, 0x20, 0x09, 0xd9,
	0xd4, 0x14, 0x2a, 0xe1, 0x34, 0x2b, 0x75, 0xe5, 0x38, 0x8a, 0x6d, 0x48, 0x5d, 0x23, 0xc9, 0x86,
	0xb4, 0x86, 0x61, 0x2c, 0x5d, 0x2b, 0x43, 0x25, 0x8d, 0x90, 0x46, 0x06, 0xbf, 0x51, 0xe9, 0xa3,
	0xb4, 0x2f, 0xd1, 0x75, 0x9f, 0xa0, 0xcb, 0xe2, 0x19, 0x39, 0x75, 0x4d, 0x31, 0x5d, 0xea, 0x7e,
	0xe7, 0x9c, 0x7b, 0x46, 0x5c, 0xd4, 0x0a, 0x39, 0x0f, 0x23, 0x30, 0xfd, 0x88, 0x17, 0x81, 0x19,
	0x50, 0x41, 0x7d, 0x2a, 0x68, 0xc4, 0x43, 0x73, 0xd1, 0x36, 0x73, 0xa0, 0x99, 0xff, 0x60, 0xa4,
	0x19, 0x17, 0x1c, 0x9f, 0x28, 0xa5, 0x21, 0x95, 0xc6, 0x86, 0xd2, 0x58, 0xb4, 0x8f, 0xcf, 0xca,
	0x18, 0x9a, 0x32, 0x73, 0xce, 0x20, 0x0a, 0xc8, 0x0c, 0x1e, 0xe8, 0x82, 0xf1, 0x4c, 0xb9, 0x8f,
	0x77, 0xee, 0xf1, 0x79, 0x1c, 0xf3, 0xa4, 0x54, 0xae, 0xa3, 0xe4, 0xd7, 0xac, 0x98, 0x9b, 0x82,
	0xc5, 0x90, 0x0b, 0x1a, 0xa7, 0x4a, 0x70, 0xf1, 0xb9, 0x86, 0x1a, 0xae, 0x6c, 0xd6, 0x55, 0x11,
	0x0e, 0xe4, 0x45, 0x24, 0xf0, 0x47, 0x84, 0x55, 0x61, 0x92, 0xc9, 0x01, 0x11, 0xcb, 0x14, 0x9a,
	0xda, 0xb9, 0xd6, 0x3a, 0xb8, 0x7c, 0x6d, 0xec, 0x68, 0x6f, 0xa8, 0x34, 0x15, 0xe3, 0x2d, 0x53,
	0x70, 0xf4, 0x7c, 0x6b, 0x82, 0x2f, 0xd1, 0xd1, 0x9f, 0xe1, 0x79, 0x31, 0x93, 0xf9, 0xd5, 0x73,
	0xad, 0x55, 0x77, 0x1a, 0x9b, 0x06, 0x57, 0x21, 0x7c, 0x85, 0x5e, 0x64, 0x10, 0x51, 0xc1, 0x16,
	0xb0, 0x72, 0xf1, 0x22, 0xf3, 0x81, 0x24, 0x34, 0x86, 0x66, 0x4d, 0x9a, 0x9e, 0xaf, 0xa9, 0x53,
	0xc2, 0x21, 0x8d, 0x01, 0xbf, 0x44, 0x87, 0x11, 0x4b, 0x3e, 0x41, 0xf0, 0xe8, 0x69, 0xfe, 0x27,
	0xe5, 0x07, 0x6a, 0xbc, 0x16, 0x63, 0x8a, 0x9e, 0xb1, 0x44, 0x40, 0x98, 0x51, 0x01, 0x01, 0xc9,
	0x97, 0xb9, 0x80, 0xb8, 0xb9, 0xff, 0x0f, 0xcf, 0x1d, 0x3c, 0xba, 0x5c, 0x69, 0xba, 0xae, 0x7d,
	0xef, 0xd4, 0xfa, 0x15, 0x47, 0x67, 0x5b, 0x00, 0x5f, 0xa1, 0xa3, 0x22, 0x87, 0x8c, 0xe4, 0x29,
	0xf8, 0x6c, 0xce, 0x7e, 0xaf, 0xa9, 0xaf, 0x1a, 0xf5, 0x2b, 0x4e, 0x63, 0x85, 0xdd, 0x35, 0x2d,
	0xe3, 0xf6, 0xd1, 0x9e, 0x92, 0xbd, 0x0a, 0x90, 0xbe, 0xfd, 0x6f, 0xf1, 0x05, 0x3a, 0x75, 0xed,
	0x8e, 0xd3, 0xed, 0x13, 0xc7, 0x76, 0xc7, 0x77, 0x1e, 0xf1, 0xee, 0x47, 0x36, 0x19, 0x0f, 0xdd,
	0x91, 0xdd, 0x1d, 0xdc, 0x0e, 0xec, 0x1b, 0xbd, 0x82, 0xeb, 0xe8, 0x7f, 0x7b, 0xe8, 0x39, 0xf7,
	0xba, 0x86, 0x75, 0xf4, 0xd4, 0xeb, 0xf4, 0x88, 0x67, 0xbf, 0x1b, 0xdd, 0x75, 0x3c, 0x5b, 0xaf,
	0xe2, 0x43, 0xf4, 0x44, 0x42, 0xd2, 0x73, 0xde, 0x8f, 0x47, 0x7a, 0xed, 0xfa, 0x9b, 0x86, 0xce,
	0x7c, 0x1e, 0xef, 0x7a, 0xf3, 0x48, 0xfb, 0x70, 0x5b, 0xe2, 0x90, 0x47, 0x34, 0x09, 0x0d, 0x9e,
	0x85, 0x66, 0x08, 0x89, 0x3c, 0x29, 0x53, 0x21, 0x9a, 0xb2, 0xfc, 0xaf, 0x07, 0xfa, 0x76, 0xe3,
	0xf3, 0xa7, 0xa6, 0x7d, 0xa9, 0x9e, 0xf4, 0x54, 0x56, 0x57, 0xae, 0xba, 0xa1, 0x82, 0x96, 0xa7,
	0x68, 0x4c, 0xda, 0x5f, 0xd7, 0x74, 0x2a, 0xe9, 0x74, 0x83, 0x4e, 0x27, 0xed, 0x1f, 0xd5, 0x53,
	0x45, 0x2d, 0x4b, 0x62, 0xcb, 0xda, 0xe0, 0x96, 0x35, 0x69, 0xcf, 0xf6, 0x64, 0xa5, 0x37, 0xbf,
	0x02, 0x00, 0x00, 0xff, 0xff, 0x7e, 0xf7, 0x03, 0xac, 0x9a, 0x03, 0x00, 0x00,
}
