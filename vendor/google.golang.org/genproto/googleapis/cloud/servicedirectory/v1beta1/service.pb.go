// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/cloud/servicedirectory/v1beta1/service.proto

package servicedirectory

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// An individual service. A service contains a name and optional metadata.
// A service must exist before
// [endpoints][google.cloud.servicedirectory.v1beta1.Endpoint] can be
// added to it.
type Service struct {
	// Immutable. The resource name for the service in the format
	// 'projects/*/locations/*/namespaces/*/services/*'.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Optional. Metadata for the service. This data can be consumed by service
	// clients.  The entire metadata dictionary may contain up to 2000 characters,
	// spread across all key-value pairs. Metadata that goes beyond any these
	// limits will be rejected.
	Metadata map[string]string `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Output only. Endpoints associated with this service. Returned on LookupService.Resolve.
	// Control plane clients should use RegistrationService.ListEndpoints.
	Endpoints            []*Endpoint `protobuf:"bytes,3,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Service) Reset()         { *m = Service{} }
func (m *Service) String() string { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()    {}
func (*Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_2464dc41fdae2e63, []int{0}
}

func (m *Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Service.Unmarshal(m, b)
}
func (m *Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Service.Marshal(b, m, deterministic)
}
func (m *Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service.Merge(m, src)
}
func (m *Service) XXX_Size() int {
	return xxx_messageInfo_Service.Size(m)
}
func (m *Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Service.DiscardUnknown(m)
}

var xxx_messageInfo_Service proto.InternalMessageInfo

func (m *Service) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Service) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Service) GetEndpoints() []*Endpoint {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

func init() {
	proto.RegisterType((*Service)(nil), "google.cloud.servicedirectory.v1beta1.Service")
	proto.RegisterMapType((map[string]string)(nil), "google.cloud.servicedirectory.v1beta1.Service.MetadataEntry")
}

func init() {
	proto.RegisterFile("google/cloud/servicedirectory/v1beta1/service.proto", fileDescriptor_2464dc41fdae2e63)
}

var fileDescriptor_2464dc41fdae2e63 = []byte{
	// 447 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x41, 0x8b, 0x13, 0x31,
	0x14, 0xc7, 0x99, 0x19, 0x57, 0xdd, 0xa8, 0x20, 0x83, 0x60, 0x2d, 0x82, 0x8b, 0xb0, 0x58, 0x2f,
	0x09, 0x75, 0x3d, 0x48, 0xd6, 0xcb, 0x56, 0x17, 0x4f, 0xc2, 0x3a, 0xe2, 0x1e, 0xa4, 0x22, 0x69,
	0xe6, 0x39, 0x46, 0xa7, 0x79, 0x43, 0x92, 0x16, 0x4a, 0x2d, 0x7e, 0x05, 0xc1, 0x6f, 0xe1, 0x47,
	0xf1, 0x53, 0x78, 0xde, 0x4f, 0xe0, 0x51, 0x26, 0xc9, 0x74, 0xd7, 0x7a, 0xb0, 0xb7, 0x37, 0xc9,
	0xff, 0xff, 0x7b, 0xff, 0xbc, 0x37, 0xe4, 0xa0, 0x42, 0xac, 0x6a, 0x60, 0xb2, 0xc6, 0x59, 0xc9,
	0x2c, 0x98, 0xb9, 0x92, 0x50, 0x2a, 0x03, 0xd2, 0xa1, 0x59, 0xb0, 0xf9, 0x70, 0x02, 0x4e, 0x0c,
	0xbb, 0x0b, 0xda, 0x18, 0x74, 0x98, 0xef, 0x07, 0x13, 0xf5, 0x26, 0xba, 0x69, 0xa2, 0xd1, 0xd4,
	0xbf, 0x17, 0xd9, 0xa2, 0x51, 0xec, 0x83, 0x82, 0xba, 0x7c, 0x3f, 0x81, 0x8f, 0x62, 0xae, 0xd0,
	0x04, 0x4e, 0xff, 0xce, 0x05, 0x81, 0x01, 0x8b, 0x33, 0xd3, 0xb5, 0xe8, 0x3f, 0xde, 0x2e, 0x17,
	0xe8, 0xb2, 0x41, 0xa5, 0x5d, 0x74, 0xdd, 0xbd, 0x00, 0x14, 0x5a, 0xa3, 0x13, 0x4e, 0xa1, 0xb6,
	0xe1, 0xf6, 0xfe, 0xf7, 0x8c, 0x5c, 0x79, 0x1d, 0x48, 0xf9, 0x6d, 0x72, 0x49, 0x8b, 0x29, 0xf4,
	0x92, 0xbd, 0x64, 0xb0, 0x3b, 0xca, 0x7e, 0x1d, 0xed, 0x14, 0xfe, 0x20, 0x7f, 0x47, 0xae, 0x4e,
	0xc1, 0x89, 0x52, 0x38, 0xd1, 0x4b, 0xf7, 0xb2, 0xc1, 0xb5, 0x47, 0x4f, 0xe9, 0x56, 0xcf, 0xa5,
	0x11, 0x4d, 0x5f, 0x46, 0xfb, 0xb1, 0x76, 0x66, 0xd1, 0xa2, 0x93, 0x62, 0x8d, 0xcc, 0x0b, 0xb2,
	0xdb, 0x65, 0xb6, 0xbd, 0xcc, 0xf3, 0xd9, 0x96, 0xfc, 0xe3, 0xe8, 0x6b, 0x91, 0x59, 0x71, 0x8e,
	0xe9, 0x1f, 0x92, 0x1b, 0x7f, 0xf5, 0xcc, 0x6f, 0x92, 0xec, 0x33, 0x2c, 0xc2, 0xdb, 0x8a, 0xb6,
	0xcc, 0x6f, 0x91, 0x9d, 0xb9, 0xa8, 0x67, 0xd0, 0x4b, 0xfd, 0x59, 0xf8, 0xe0, 0xe9, 0x93, 0x84,
	0x7f, 0x3d, 0x3b, 0xfa, 0x42, 0x1e, 0xfc, 0xd3, 0x34, 0x44, 0x12, 0x8d, 0xb2, 0x54, 0xe2, 0x94,
	0x75, 0x63, 0x7b, 0xd5, 0x18, 0xfc, 0x04, 0xd2, 0x59, 0xb6, 0x8c, 0xd5, 0x8a, 0xd5, 0x28, 0xc3,
	0x98, 0xd9, 0xb2, 0x2b, 0x57, 0xac, 0x9d, 0xa5, 0x6d, 0x84, 0x04, 0xcb, 0x96, 0xeb, 0x7a, 0xd5,
	0x2d, 0xd2, 0xb2, 0x65, 0xac, 0x56, 0xa3, 0x6f, 0x29, 0x79, 0x28, 0x71, 0xba, 0xdd, 0x10, 0x46,
	0xd7, 0x63, 0x92, 0x93, 0x76, 0xa3, 0x27, 0xc9, 0xdb, 0x37, 0xd1, 0x56, 0x61, 0x2d, 0x74, 0x45,
	0xd1, 0x54, 0xac, 0x02, 0xed, 0xf7, 0xcd, 0xce, 0xdf, 0xf0, 0x9f, 0xdf, 0xe8, 0x70, 0xf3, 0xe2,
	0x77, 0x92, 0xfc, 0x48, 0xf7, 0x5f, 0x04, 0xf4, 0x33, 0x9f, 0x28, 0xf6, 0x7d, 0xbe, 0x4e, 0x74,
	0x3a, 0x1c, 0xb5, 0xde, 0x9f, 0x9d, 0x6e, 0xec, 0x75, 0xe3, 0x4d, 0xdd, 0xf8, 0x34, 0xf4, 0x38,
	0x4b, 0x07, 0x41, 0xc7, 0xb9, 0x17, 0x72, 0xbe, 0xa9, 0xe4, 0x3c, 0x4a, 0x27, 0x97, 0x7d, 0xfe,
	0x83, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xc4, 0x44, 0x83, 0x37, 0x9d, 0x03, 0x00, 0x00,
}
