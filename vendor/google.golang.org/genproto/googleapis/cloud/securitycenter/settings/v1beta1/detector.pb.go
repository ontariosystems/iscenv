// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/cloud/securitycenter/settings/v1beta1/detector.proto

package settings

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Detector is a set of detectors or scanners act as individual checks done
// within a component e.g. bad IP, bad domains, IAM anomaly, cryptomining, open
// firewall, etc. Detector is independent of Organization, meaning each detector
// must be defined for a given Security Center component under a specified
// billing tier. Organizations can configure the list of detectors based on
// their subscribed billing tier.
//
// Defines a detector, its billing tier and any applicable labels.
type Detector struct {
	// Output only. Detector Identifier
	Detector string `protobuf:"bytes,1,opt,name=detector,proto3" json:"detector,omitempty"`
	// Output only. Component that supports detector type.  Multiple components may support the
	// same detector.
	Component string `protobuf:"bytes,2,opt,name=component,proto3" json:"component,omitempty"`
	// Output only. The billing tier may be different for a detector of the same name in
	// another component.
	BillingTier BillingTier `protobuf:"varint,3,opt,name=billing_tier,json=billingTier,proto3,enum=google.cloud.securitycenter.settings.v1beta1.BillingTier" json:"billing_tier,omitempty"`
	// Output only. Google curated detector labels. These are alphanumeric tags that are not
	// necessarily human readable. Labels can be used to group detectors together
	// in the future. An example might be tagging all detectors “PCI” that help
	// with PCI compliance.
	DetectorLabels       []string `protobuf:"bytes,4,rep,name=detector_labels,json=detectorLabels,proto3" json:"detector_labels,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Detector) Reset()         { *m = Detector{} }
func (m *Detector) String() string { return proto.CompactTextString(m) }
func (*Detector) ProtoMessage()    {}
func (*Detector) Descriptor() ([]byte, []int) {
	return fileDescriptor_65451767a2d4d6cd, []int{0}
}

func (m *Detector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Detector.Unmarshal(m, b)
}
func (m *Detector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Detector.Marshal(b, m, deterministic)
}
func (m *Detector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Detector.Merge(m, src)
}
func (m *Detector) XXX_Size() int {
	return xxx_messageInfo_Detector.Size(m)
}
func (m *Detector) XXX_DiscardUnknown() {
	xxx_messageInfo_Detector.DiscardUnknown(m)
}

var xxx_messageInfo_Detector proto.InternalMessageInfo

func (m *Detector) GetDetector() string {
	if m != nil {
		return m.Detector
	}
	return ""
}

func (m *Detector) GetComponent() string {
	if m != nil {
		return m.Component
	}
	return ""
}

func (m *Detector) GetBillingTier() BillingTier {
	if m != nil {
		return m.BillingTier
	}
	return BillingTier_BILLING_TIER_UNSPECIFIED
}

func (m *Detector) GetDetectorLabels() []string {
	if m != nil {
		return m.DetectorLabels
	}
	return nil
}

func init() {
	proto.RegisterType((*Detector)(nil), "google.cloud.securitycenter.settings.v1beta1.Detector")
}

func init() {
	proto.RegisterFile("google/cloud/securitycenter/settings/v1beta1/detector.proto", fileDescriptor_65451767a2d4d6cd)
}

var fileDescriptor_65451767a2d4d6cd = []byte{
	// 372 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0xcf, 0x4e, 0xea, 0x40,
	0x14, 0xc6, 0xd3, 0xf6, 0xe6, 0x06, 0x7a, 0x6f, 0x30, 0xe9, 0xaa, 0x21, 0x26, 0xa0, 0x2b, 0x16,
	0x64, 0x06, 0x74, 0x65, 0x59, 0x59, 0x4c, 0xdc, 0xb8, 0x20, 0x42, 0x58, 0x98, 0x26, 0x64, 0x5a,
	0x8e, 0xe3, 0x24, 0xc3, 0x4c, 0xd3, 0x0e, 0x24, 0xbe, 0x92, 0x0b, 0x1f, 0xc4, 0x97, 0xd0, 0xb5,
	0x4f, 0xe0, 0xd2, 0x30, 0x7f, 0x40, 0x76, 0xb2, 0x9c, 0x73, 0xbe, 0xdf, 0xf9, 0xbe, 0x73, 0x26,
	0x1c, 0x51, 0x29, 0x29, 0x07, 0x5c, 0x70, 0xb9, 0x5e, 0xe2, 0x1a, 0x8a, 0x75, 0xc5, 0xd4, 0x73,
	0x01, 0x42, 0x41, 0x85, 0x6b, 0x50, 0x8a, 0x09, 0x5a, 0xe3, 0xcd, 0x30, 0x07, 0x45, 0x86, 0x78,
	0x09, 0x0a, 0x0a, 0x25, 0x2b, 0x54, 0x56, 0x52, 0xc9, 0xa8, 0x6f, 0x60, 0xa4, 0x61, 0x74, 0x08,
	0x23, 0x07, 0x23, 0x0b, 0xb7, 0x3b, 0xd6, 0x8a, 0x94, 0x0c, 0x3f, 0x32, 0xe0, 0xcb, 0x45, 0x0e,
	0x4f, 0x64, 0xc3, 0xdc, 0xb8, 0xf6, 0xf8, 0xa8, 0x2c, 0x39, 0xe3, 0x9c, 0x09, 0xba, 0xd8, 0xf9,
	0x98, 0x21, 0xa7, 0x3f, 0x5c, 0x88, 0x10, 0x52, 0x11, 0xc5, 0xa4, 0xb0, 0xdd, 0xf3, 0x77, 0x2f,
	0x6c, 0xdc, 0xd8, 0x25, 0xa2, 0x4e, 0xd8, 0x70, 0x0b, 0xc5, 0x5e, 0xd7, 0xeb, 0x35, 0xd3, 0xe0,
	0xe3, 0x3a, 0xb8, 0xdf, 0x15, 0xa3, 0xb3, 0xb0, 0x59, 0xc8, 0x55, 0x29, 0x05, 0x08, 0x15, 0xfb,
	0x7b, 0xc5, 0xbe, 0x1a, 0x91, 0xf0, 0xbf, 0x0b, 0xa2, 0x18, 0x54, 0x71, 0xd0, 0xf5, 0x7a, 0xad,
	0x8b, 0x2b, 0x74, 0xcc, 0x65, 0x50, 0x6a, 0x26, 0xcc, 0x18, 0x54, 0xc6, 0xe0, 0x5f, 0xbe, 0xaf,
	0x44, 0xfd, 0xf0, 0xc4, 0x25, 0x5a, 0x70, 0x92, 0x03, 0xaf, 0xe3, 0x3f, 0xdd, 0xc0, 0x65, 0x69,
	0xb9, 0xde, 0x9d, 0x6e, 0xa5, 0xaf, 0x7e, 0x38, 0x28, 0xe4, 0xea, 0xa8, 0x00, 0x69, 0xcb, 0xdd,
	0xa4, 0x9e, 0x6c, 0xcf, 0x34, 0xf1, 0x1e, 0x66, 0x96, 0xa7, 0x92, 0x13, 0x41, 0x91, 0xac, 0x28,
	0xa6, 0x20, 0xf4, 0x11, 0xb1, 0x69, 0x91, 0x92, 0xd5, 0xbf, 0xfb, 0xaa, 0x91, 0x2b, 0x7c, 0x79,
	0xde, 0x8b, 0xdf, 0xbf, 0x35, 0x93, 0xc7, 0x3a, 0xd9, 0xd4, 0xa2, 0x63, 0x93, 0x6c, 0xea, 0x92,
	0xcd, 0x87, 0xe9, 0x16, 0x7d, 0x73, 0xf2, 0x4c, 0xcb, 0xb3, 0x43, 0x79, 0xe6, 0xe4, 0xd9, 0xdc,
	0x38, 0x7d, 0xfa, 0x03, 0x23, 0x4f, 0x12, 0xad, 0x4f, 0x92, 0x43, 0x60, 0xfb, 0x36, 0x44, 0x92,
	0x58, 0x24, 0xff, 0xab, 0x97, 0xba, 0xfc, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xaf, 0x6c, 0x7b, 0x2f,
	0x0a, 0x03, 0x00, 0x00,
}
