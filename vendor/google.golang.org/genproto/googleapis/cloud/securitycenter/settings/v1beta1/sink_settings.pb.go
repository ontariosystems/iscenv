// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/cloud/securitycenter/settings/v1beta1/sink_settings.proto

package settings

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Sink Settings for Security Command Center
type SinkSettings struct {
	// The resource name of the project to send logs to. This project must be
	// part of the same organization where the Security Center API is
	// enabled. The format is `projects/{project}`. If it is empty, we do
	// not output logs. If a project ID is provided it will be normalized to a
	// project number.
	LoggingSinkProject   string   `protobuf:"bytes,1,opt,name=logging_sink_project,json=loggingSinkProject,proto3" json:"logging_sink_project,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SinkSettings) Reset()         { *m = SinkSettings{} }
func (m *SinkSettings) String() string { return proto.CompactTextString(m) }
func (*SinkSettings) ProtoMessage()    {}
func (*SinkSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_1176d497169df3fc, []int{0}
}

func (m *SinkSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SinkSettings.Unmarshal(m, b)
}
func (m *SinkSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SinkSettings.Marshal(b, m, deterministic)
}
func (m *SinkSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SinkSettings.Merge(m, src)
}
func (m *SinkSettings) XXX_Size() int {
	return xxx_messageInfo_SinkSettings.Size(m)
}
func (m *SinkSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_SinkSettings.DiscardUnknown(m)
}

var xxx_messageInfo_SinkSettings proto.InternalMessageInfo

func (m *SinkSettings) GetLoggingSinkProject() string {
	if m != nil {
		return m.LoggingSinkProject
	}
	return ""
}

func init() {
	proto.RegisterType((*SinkSettings)(nil), "google.cloud.securitycenter.settings.v1beta1.SinkSettings")
}

func init() {
	proto.RegisterFile("google/cloud/securitycenter/settings/v1beta1/sink_settings.proto", fileDescriptor_1176d497169df3fc)
}

var fileDescriptor_1176d497169df3fc = []byte{
	// 281 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0xbf, 0x4a, 0xfc, 0x40,
	0x10, 0xc7, 0x49, 0x8a, 0x1f, 0x5c, 0xf8, 0x55, 0xc1, 0x42, 0xc4, 0x42, 0xac, 0x2c, 0x8e, 0xdd,
	0x04, 0xbb, 0xb5, 0x39, 0x72, 0x85, 0xed, 0x61, 0xe4, 0x0a, 0x09, 0x1c, 0x7b, 0x71, 0x19, 0xd6,
	0x8b, 0x33, 0x21, 0x99, 0x13, 0x7c, 0x24, 0x7d, 0x14, 0x1f, 0xc5, 0x27, 0xb0, 0x94, 0xec, 0x1f,
	0x21, 0x9d, 0x96, 0xd9, 0xf9, 0x7e, 0x3e, 0xf3, 0x9d, 0x64, 0x2b, 0x20, 0x82, 0xce, 0xc8, 0xb6,
	0xa3, 0xe3, 0xa3, 0x1c, 0x4d, 0x7b, 0x1c, 0x2c, 0xbf, 0xb6, 0x06, 0xd9, 0x0c, 0x72, 0x34, 0xcc,
	0x16, 0x61, 0x94, 0x2f, 0xe5, 0xde, 0xb0, 0x2e, 0xe5, 0x68, 0xf1, 0xb0, 0x8b, 0xaf, 0xa2, 0x1f,
	0x88, 0x29, 0x5f, 0x7a, 0x83, 0x70, 0x06, 0x31, 0x37, 0x88, 0x9f, 0x6c, 0x30, 0x9c, 0x9d, 0x87,
	0x7d, 0xba, 0xb7, 0x52, 0x23, 0x12, 0x6b, 0xb6, 0x84, 0xc1, 0x75, 0xb9, 0xca, 0xfe, 0xd7, 0x16,
	0x0f, 0x75, 0xa0, 0xf2, 0x22, 0x3b, 0xe9, 0x08, 0xc0, 0x22, 0xec, 0xdc, 0xea, 0x7e, 0xa0, 0x27,
	0xd3, 0xf2, 0x69, 0x72, 0x91, 0x5c, 0x2d, 0xee, 0xf2, 0x30, 0x9b, 0x90, 0x8d, 0x9f, 0x54, 0x6f,
	0x69, 0x56, 0xb4, 0xf4, 0x2c, 0xfe, 0x52, 0xaa, 0x5a, 0x04, 0x03, 0xd3, 0x26, 0x79, 0xb8, 0x0f,
	0x28, 0x50, 0xa7, 0x11, 0x04, 0x0d, 0x20, 0xc1, 0xa0, 0xeb, 0x27, 0xfd, 0x48, 0xf7, 0x76, 0xfc,
	0xdd, 0x0f, 0xbb, 0x89, 0x0f, 0x5f, 0x49, 0xf2, 0x9e, 0x2e, 0x6f, 0xbd, 0x79, 0xed, 0x4a, 0xd5,
	0x01, 0x5d, 0xfb, 0x52, 0xf1, 0x66, 0xb1, 0x2d, 0xab, 0x09, 0xfd, 0x88, 0xf1, 0xc6, 0xc5, 0x9b,
	0x79, 0xbc, 0x89, 0xf1, 0x66, 0xeb, 0x37, 0x7d, 0xa6, 0x85, 0x8f, 0x2b, 0xe5, 0xf2, 0x4a, 0xcd,
	0x81, 0xe9, 0xdb, 0x13, 0x4a, 0x05, 0x64, 0xff, 0xcf, 0x1d, 0x75, 0xfd, 0x1d, 0x00, 0x00, 0xff,
	0xff, 0x95, 0x19, 0xd9, 0x88, 0x04, 0x02, 0x00, 0x00,
}
